#!/usr/bin/env python
#
# Show ownership for whole repo:
#   $ git ownership
#
# Show ownership for specific directories:
#   $ git ownership app lib
#
# Show ownership for a time range:
#   $ git ownership --since='1 month ago'
#
# (These are all standard arguments to `git log`.)

import subprocess, re, sys

regex = re.compile("^author_line(.*)$")

try:
    lines = subprocess.check_output(["git", "log", "--all", "-M", "-C", "--name-only", "--format=author_line%aN"] + sys.argv[1:]).splitlines()
except subprocess.CalledProcessError as e:
    sys.stderr.write(e.output)
    sys.exit(e.returncode)

i = 1
edits = {}
while i < len(lines):
    if not lines[i]: # delineates author from filename
        author = re.match(regex, lines[i-1]).groups()[0]
        i += 1
        while i < len(lines) and not re.match(regex, lines[i]):
            edits[lines[i]] = edits.get(lines[i], {'authors':{}, 'total_edits':0, 'majors':[], 'minors':[], 'ownership':0})
            edits[lines[i]]['authors'][author] = edits[lines[i]]['authors'].get(author, 0) + 1
            edits[lines[i]]['total_edits'] += 1
            i+=1
    else:
        i+=1

for filepath, info in sorted(edits.items()):
    #print filepath
    authors = sorted(info['authors'].items(), key=lambda i:i[1], reverse=True) 
    for author, count in authors:
        if float(count) / info['total_edits'] >= 0.05:
            info['majors'].append(author)
            #print "\t", author, count, "(MAJOR:%d%%)" % (float(count) / info['total_edits'] * 100)
        else:
            info['minors'].append(author)
            #print "\t", author, count, "(MINOR:%d%%)" % (float(count) / info['total_edits'] * 100)
    info['ownership'] = max([float(info['authors'][a])/info['total_edits']*100 for a in info['majors']])
    #print "MAJOR:%d MINOR:%d" % (len(info['majors']), len(info['minors']))

print "ownership\tmajor\tminor\tfile"
for filepath, info in sorted(edits.items(), key=lambda i:len(i[1]['minors'])):
    print "%d\t%d\t%d\t%s" % (info['ownership'], len(info['majors']), len(info['minors']), filepath)
